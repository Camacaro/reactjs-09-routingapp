{"version":3,"sources":["componentes/Nosotros/Nosotros.js","componentes/Error/Error.js","componentes/Producto/Producto.js","componentes/Buscador/Buscador.js","componentes/Productos/Productos.js","componentes/Header/Header.js","componentes/SingleProducto/SingleProducto.js","componentes/Navegacion/Navegacion.js","componentes/Contacto/Contacto.js","componentes/Router.js","App.js","serviceWorker.js","index.js"],"names":["Nosotros","react_default","a","createElement","className","src","alt","Component","Error","Producto","props","_props$informacion","informacion","imagen","nombre","precio","id","concat","react_router_dom","to","Buscador","buscarRef","React","createRef","leerDatos","e","termino","_this","current","value","busquedaProducto","ref","this","type","placeholder","onChange","Productos","componentes_Buscador_Buscador","Object","keys","productos","map","producto","componentes_Producto_Producto","key","Header","SingleProducto","undefined","_props$producto","descripcion","Navegacion","activeClassName","Contacto","Router","state","terminoBusqueda","busqueda","length","setState","infoProductos","resultado","_this2","toConsumableArray","filter","toLowerCase","indexOf","componentes_Header_Header","componentes_Navegacion_Navegacion","react_router","exact","path","render","componentes_Productos_Productos","component","productoId","location","pathname","replace","componentes_SingleProducto_SingleProducto","App","componentes_Router","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.edece251.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Nosotros.css';\r\n\r\nclass Nosotros extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contenedor-nosotros\">\r\n                <div className=\"imagen\">\r\n                    <img src=\"img/camisa_1.png\" alt=\"imagen nosotros\" />\r\n                </div>\r\n\r\n                <div className=\"contenido\">\r\n                    <h2>Sobre Nosotros</h2>\r\n                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nosotros;","import React, { Component } from 'react';\r\n\r\nclass Error extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Ruta no Encontrada</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Producto = (props) => {\r\n    /**Viene de Router */\r\n    const {imagen, nombre, precio, id } = props.informacion;\r\n    \r\n    return (\r\n        <li>\r\n            <img src={`img/${imagen}.png`} alt={nombre} />\r\n\r\n            <p> {nombre} <span>$ {precio} </span> </p>\r\n\r\n            <Link to={`/producto/${id}`} > Más Información </Link>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Producto;","import React, { Component } from 'react';\r\nimport './Buscador.css';\r\n\r\nclass Buscador extends Component {\r\n    \r\n    buscarRef = React.createRef();\r\n\r\n    leerDatos = (e) => {\r\n        /**\r\n         * En vez de utilizar el ref puedo utilizar e.target.value\r\n         */\r\n        const termino = this.buscarRef.current.value;\r\n        \r\n        /**Enviamos por props, hacia productos */\r\n        this.props.busquedaProducto(termino);\r\n    }\r\n    \r\n    render() {\r\n        /**\r\n         * leerDatos: es una funcion que se ejecutara al ajecutar el evento onChange.\r\n         */\r\n        return (\r\n            <form className=\"buscador\">\r\n                <input ref={this.buscarRef} type=\"text\" placeholder=\"Búsqueda\" onChange={this.leerDatos} />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Buscador;","import React, { Component } from 'react';\r\nimport Producto from '../Producto/Producto';\r\nimport './Productos.css';\r\nimport Buscador from '../Buscador/Buscador';\r\n\r\nclass Productos extends Component {\r\n    /**Este props viene de Router.js \r\n     * this.props.productos\r\n     * this.props.busquedaProducto\r\n    */\r\n    render() {\r\n        return (\r\n            <div className=\"productos\">\r\n                <h2>Nuestros Productos</h2>\r\n\r\n                <Buscador\r\n                    busquedaProducto={this.props.busquedaProducto}\r\n                />\r\n\r\n                <ul className=\"lista-productos\">\r\n                    {Object.keys(this.props.productos).map((producto)=>(\r\n                        <Producto\r\n                            key={producto}\r\n                            informacion={this.props.productos[producto]}\r\n                        />\r\n                    ))}\r\n                </ul>   \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Productos;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n    /**Header reemplaza a la etiqueta <a href=\"\"></a> */\r\n    /**\r\n     * Los link los tienes que usar dentro de BrowserRouter\r\n     */\r\n    return (\r\n        <header>\r\n            <Link to={'/'} >\r\n                <img src=\"img/logo.png\" alt=\"imagen\"/>        \r\n            </Link>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './SingleProducto.css';\r\n\r\nconst SingleProducto = (props) => {\r\n\r\n    if(props.producto === undefined){\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Esto viene de Router\r\n     */\r\n    const {nombre, imagen, precio, descripcion} = props.producto;\r\n    \r\n    return (\r\n        <div className=\"info-producto\">\r\n            <div className=\"imagen\">\r\n                <img src={`img/${imagen}.png`} alt={nombre} />\r\n            </div>\r\n\r\n            <div className=\"info\">\r\n                <h2> {nombre} </h2>\r\n                <p className=\"precio\">$ {precio} </p>\r\n                <p> {descripcion} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SingleProducto;","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport './Navegacion.css'\r\n/**\r\n * Se va a reemplazar Link por NavLink, para saber cual link es el que esta activo\r\n * \r\n * Antes\r\n * <nav className=\"navegacion\">\r\n        <Link to={'/nosotros'} >Nosotros</Link>\r\n        <Link to={'/productos'} >Productos</Link>\r\n        <Link to={'/contacto'} >Contacto</Link>\r\n    </nav>\r\n */\r\n\r\nconst Navegacion = () => {\r\n    \r\n    /**\r\n     * Los link los tienes que usar dentro de BrowserRouter\r\n     */\r\n    return (\r\n        <nav className=\"navegacion\">\r\n            <NavLink to={'/nosotros'} activeClassName=\"activo\" >Nosotros</NavLink>\r\n            <NavLink to={'/productos'} activeClassName=\"activo\" >Productos</NavLink>\r\n            <NavLink to={'/contacto'} activeClassName=\"activo\" >Contacto</NavLink>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navegacion;","import React from 'react';\r\nimport './Contacto.css';\r\n\r\nconst Contacto = () => {\r\n    return (\r\n        <form>\r\n            <legend>Formulario de Contacto</legend>\r\n            <div className=\"input-field\">\r\n                <label>Nombre:</label>\r\n                <input type=\"text\" placeholder=\"Tu nombre\" />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label>Email:</label>\r\n                <input type=\"email\" placeholder=\"Tu Email\" />\r\n            </div>\r\n\r\n            <div className=\"input-field\">\r\n                <label>Mensaje:</label>\r\n                <textarea></textarea>\r\n            </div>\r\n\r\n            <div className=\"input-field enviar\">\r\n                <input type=\"submit\" value=\"Enviar\"/>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Contacto;","import React, { Component } from 'react';\r\n/**Importando Ruoter */\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Nosotros from './Nosotros/Nosotros';\r\nimport Error from './Error/Error';\r\nimport infoProductos from '../datos/datos.json';\r\nimport Productos from './Productos/Productos';\r\nimport Header from './Header/Header';\r\nimport SingleProducto from './SingleProducto/SingleProducto';\r\nimport Navegacion from './Navegacion/Navegacion';\r\nimport Contacto from './Contacto/Contacto';\r\n\r\nclass Router extends Component {\r\n    \r\n    state = {\r\n        productos:[],\r\n        terminoBusqueda:''\r\n    }\r\n\r\n    componentWillMount(){\r\n        this.setState({\r\n            productos:infoProductos\r\n        })\r\n    }\r\n\r\n    /**\r\n     * Esta es una funcion que recibira valores desde Buscador.js\r\n     * Productos->Buscador\r\n     */\r\n    busquedaProducto = (busqueda) => {\r\n        if(busqueda.length > 3){\r\n            this.setState({\r\n                terminoBusqueda:busqueda\r\n            });\r\n        }else {\r\n            this.setState({\r\n                terminoBusqueda:''\r\n            });\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        /** \r\n         * Todo lo que lleve enlance o sea para navegar tiene que ir dentro de estas etiquetas\r\n         * <BrowserRouter>\r\n         * \r\n         * Esto nos permite tener diferentes rutas en el proyecto, esto es el registro de rutas para ser encontradas cuando \r\n         * naveguemos\r\n         * <Switch>\r\n         * \r\n         * Cargamos la ruta\r\n         * <Route path=\"/\" component={Inicio} />\r\n         * \r\n         * Cargamos la ruta con props\r\n         * <Route exact path=\"/\" render={()=>(\r\n                <Productos\r\n                    productos={this.state.productos}\r\n                />  \r\n            )} />\r\n         *  \r\n            Parametros en la ruta\r\n            <Route exact path=\"/producto/:idProducto\" render=\r\n         * */\r\n\r\n         /**\r\n          * Dentro de BrowserRouter, podemos colocar componentes que seran visibles en todas las pestañas, pero\r\n          * no dentro de Switch, ya que cambia la pestaña-su contenido\r\n          */\r\n\r\n        /**Obtener copia de los productos */\r\n        let productos = [...this.state.productos];\r\n        \r\n        let busqueda = this.state.terminoBusqueda;\r\n\r\n        let resultado;\r\n        \r\n        if( busqueda !== '' ){\r\n\r\n            /**Filtramos productos por la que haya escrito el usuario */\r\n            resultado = productos.filter( producto => {\r\n                /**\r\n                 * Transformamos el nombre a miniscula \r\n                 * con el indexOf comparamos por su indice y si coincide lo devuelve\r\n                 * que sea diferente de menos -1, ya que si no encuentra nada devolvera -1, osea si no hay nada devolvera -1\r\n                 * */\r\n                return producto.nombre.toLowerCase().indexOf( busqueda.toLowerCase() ) !== -1\r\n            })\r\n\r\n        }else{\r\n            resultado = productos;\r\n        }\r\n\r\n        \r\n        return (\r\n            <BrowserRouter>\r\n\r\n                <Header/>\r\n\r\n                <Navegacion/>\r\n\r\n                <Switch>\r\n\r\n                    <Route exact path=\"/\" render={()=>(\r\n                        <Productos\r\n                            productos={resultado}\r\n                            busquedaProducto = {this.busquedaProducto}\r\n                        />\r\n                    )} />\r\n\r\n                    <Route exact path=\"/nosotros\" component={Nosotros} />\r\n\r\n                    <Route exact path=\"/productos\" render={()=>(\r\n                        <Productos\r\n                            productos={resultado}\r\n                            busquedaProducto = {this.busquedaProducto}\r\n                        />\r\n                    )} />\r\n\r\n                    <Route exact path=\"/producto/:productoId\" render={ (props) => {\r\n                        \r\n                        let productoId = props.location.pathname.replace('/producto/', '');\r\n\r\n                        return (\r\n                            <SingleProducto\r\n                                producto = {this.state.productos[productoId]}\r\n                            />\r\n                        );\r\n                    }} />\r\n\r\n                    <Route exact path=\"/contacto\" component={Contacto} />\r\n\r\n                    <Route component={Error} />\r\n\r\n                </Switch>\r\n                \r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Router;","import React, { Component } from 'react';\nimport Router from './componentes/Router';\n\nclass App extends Component {\n  \trender() {\n    \treturn (\n      \t\t<div className=\"contenedor\">\n\t\t\t\t<Router/>\n      \t\t</div>\n    \t);\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}